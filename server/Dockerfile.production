# Simple Mattermost API Dockerfile (bypasses make dependencies)
FROM golang:1.24-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git curl

# Set working directory
WORKDIR /mattermost-server

# Copy source code
COPY . .

# Manually copy i18n files from source if they exist
RUN mkdir -p /dist/i18n && \
    if [ -d "i18n" ]; then cp -r i18n/* /dist/i18n/; fi

# Copy templates if they exist  
RUN mkdir -p /dist/templates && \
    if [ -d "templates" ]; then cp -r templates/* /dist/templates/; fi

# Build the server binary directly
RUN CGO_ENABLED=0 GOOS=linux go build \
    -ldflags "-X 'github.com/mattermost/mattermost/server/public/model.BuildNumber=prod' \
              -X 'github.com/mattermost/mattermost/server/public/model.BuildDate=$(date -u)' \
              -X 'github.com/mattermost/mattermost/server/public/model.BuildHash=$(git rev-parse HEAD 2>/dev/null || echo "unknown")' \
              -X 'github.com/mattermost/mattermost/server/public/model.BuildEnterpriseReady=true'" \
    -o /dist/mattermost \
    ./cmd/mattermost

# Production stage
FROM alpine:3.18

# Install runtime dependencies
RUN apk add --no-cache ca-certificates curl

# Create mattermost user
RUN addgroup -g 2000 mattermost && \
    adduser -D -u 2000 -G mattermost -h /mattermost -s /bin/sh mattermost

# Set up directory structure
WORKDIR /mattermost
RUN mkdir -p data logs config plugins

# Copy built binary and assets
COPY --from=builder /dist/mattermost ./bin/mattermost
COPY --from=builder /dist/i18n ./i18n
COPY --from=builder /dist/templates ./templates

# Create minimal config
RUN echo '{"ServiceSettings":{"SiteURL":"","ListenAddress":":8065","EnableDeveloper":false},"SqlSettings":{"DriverName":"","DataSource":""},"LocalizationSettings":{"DefaultServerLocale":"en","DefaultClientLocale":"en","AvailableLocales":"en"}}' > config/config.json

# Set permissions
RUN chown -R mattermost:mattermost /mattermost && \
    chmod +x /mattermost/bin/mattermost

# Switch to non-root user
USER mattermost

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8065/api/v4/system/ping || exit 1

# Expose port
EXPOSE 8065

# Start server
CMD ["./bin/mattermost"]